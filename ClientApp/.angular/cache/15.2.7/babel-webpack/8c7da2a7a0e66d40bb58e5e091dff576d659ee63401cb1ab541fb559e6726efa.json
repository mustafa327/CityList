{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CityPageComp_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CityPageComp_table_3_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cityname_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cityname_r3);\n  }\n}\nfunction CityPageComp_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"City Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, CityPageComp_table_3_tr_6_Template, 3, 1, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cityNames);\n  }\n}\nexport class CityPageComp {\n  constructor(http, baseUrl) {\n    this.cityNameInput = \"\";\n    this.cityNames = [];\n    this.httpcl = http;\n    this.apiURL = baseUrl;\n    http.get(baseUrl + 'city/ListCity').subscribe(result => {\n      this.cityNames = result;\n    }, error => console.error(error));\n  }\n  addCity(city) {\n    this.httpcl?.get(this.apiURL + 'city/AddCity?cityName=' + city).subscribe(result => {\n      location.reload();\n    }, error => location.reload());\n  }\n  removeCity(city) {\n    this.httpcl?.get(this.apiURL + 'city/RemoveCity?cityName=' + city).subscribe(result => {\n      location.reload();\n    }, error => location.reload());\n  }\n}\nCityPageComp.ɵfac = function CityPageComp_Factory(t) {\n  return new (t || CityPageComp)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCityPageComp.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CityPageComp,\n  selectors: [[\"app-city-page\"]],\n  inputs: {\n    cityNameInput: \"cityNameInput\"\n  },\n  decls: 11,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"placeholder\", \"Cityname\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CityPageComp_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"City Names\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CityPageComp_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(3, CityPageComp_table_3_Template, 7, 1, \"table\", 2);\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵtext(5, \" Name: \");\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CityPageComp_Template_input_ngModelChange_6_listener($event) {\n        return ctx.cityNameInput = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CityPageComp_Template_button_click_7_listener() {\n        return ctx.removeCity(ctx.cityNameInput);\n      });\n      i0.ɵɵtext(8, \"Delete City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CityPageComp_Template_button_click_9_listener() {\n        return ctx.addCity(ctx.cityNameInput);\n      });\n      i0.ɵɵtext(10, \"Add City\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.cityNames == null ? null : ctx.cityNames.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cityNames.length);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.cityNameInput);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAEAA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAS7CA,0BAAuC;IACjCA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,iCAAc;;;;;IARxBA,gCAAyF;IAG/EA,yBAAS;IAAAA,iBAAK;IAGtBA,6BAAO;IACLA,mEAEK;IACPA,iBAAQ;;;;IAHmBA,eAAY;IAAZA,0CAAY;;;ACHzC,OAAM,MAAOC,YAAY;EAKvBC,YAAYC,IAAgB,EAAsBC,OAAe;IAJxD,kBAAa,GAAW,EAAE;IAC5B,cAAS,GAAkB,EAAE;IAIlC,IAAI,CAACC,MAAM,GAAGF,IAAI;IAClB,IAAI,CAACG,MAAM,GAAGF,OAAO;IACrBD,IAAI,CAACI,GAAG,CAAgBH,OAAO,GAAG,eAAe,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACpE,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,OAAO,CAACC,IAAY;IAElB,IAAI,CAACT,MAAM,EAAEE,GAAG,CAAC,IAAI,CAACD,MAAM,GAAG,wBAAwB,GAAGQ,IAAI,CAAC,CAACN,SAAS,CAACC,MAAM,IAAG;MACjFM,QAAQ,CAACC,MAAM,EAAE;IACnB,CAAC,EAAEL,KAAK,IAAII,QAAQ,CAACC,MAAM,EAAE,CAAC;EAChC;EAEAC,UAAU,CAACH,IAAY;IACrB,IAAI,CAACT,MAAM,EAAEE,GAAG,CAAC,IAAI,CAACD,MAAM,GAAG,2BAA2B,GAAGQ,IAAI,CAAC,CAACN,SAAS,CAACC,MAAM,IAAG;MACpFM,QAAQ,CAACC,MAAM,EAAE;IACnB,CAAC,EAAEL,KAAK,IAAII,QAAQ,CAACC,MAAM,EAAE,CAAC;EAChC;;AAxBWf,YAAY;mBAAZA,YAAY,4DAKe,UAAU;AAAA;AALrCA,YAAY;QAAZA,YAAY;EAAAiB;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRzBxB,6BAAoB;MAAAA,0BAAU;MAAAA,iBAAK;MAEnCA,yDAAqD;MAErDA,iEAWQ;MAERA,2BAAK;MACHA,uBACA;MAAAA,gCAA4D;MAArDA;QAAA;MAAA,EAA2B;MAAlCA,iBAA4D;MAI9DA,iCAA4C;MAApCA;QAAA,OAASyB,iCAAyB;MAAA,EAAC;MAACzB,2BAAW;MAAAA,iBAAS;MAChEA,iCAAyC;MAAjCA;QAAA,OAASyB,8BAAsB;MAAA,EAAC;MAACzB,yBAAQ;MAAAA,iBAAS;;;MAtBtDA,eAAwB;MAAxBA,6EAAwB;MAEqCA,eAAsB;MAAtBA,2CAAsB;MAe9EA,eAA2B;MAA3BA,2CAA2B","names":["i0","CityPageComp","constructor","http","baseUrl","httpcl","apiURL","get","subscribe","result","cityNames","error","console","addCity","city","location","reload","removeCity","selectors","inputs","cityNameInput","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\musta\\source\\repos\\FreelancerProjectAngular\\ClientApp\\src\\app\\city-page\\city-page.html","C:\\Users\\musta\\source\\repos\\FreelancerProjectAngular\\ClientApp\\src\\app\\city-page\\city-page.ts"],"sourcesContent":["<h1 id=\"tableLabel\">City Names</h1>\r\n\r\n<p *ngIf=\"!cityNames?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"cityNames.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>City Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let cityname of cityNames\">\r\n      <td>{{ cityname }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<div>\r\n  Name:\r\n  <input [(ngModel)]=\"cityNameInput\" placeholder=\"Cityname\" />\r\n\r\n</div>\r\n\r\n<button (click)=\"removeCity(cityNameInput)\">Delete City</button>\r\n<button (click)=\"addCity(cityNameInput)\">Add City</button>\r\n","import { Component, Inject, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { getBaseUrl } from '../../main';\r\n\r\n@Component({\r\n  selector: 'app-city-page',\r\n  templateUrl: './city-page.html'\r\n})\r\nexport class CityPageComp {\r\n  @Input() cityNameInput: string = \"\";\r\n  public cityNames: Array<string> = []\r\n  public httpcl: HttpClient | undefined;\r\n  public apiURL: string | undefined;\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.httpcl = http;\r\n    this.apiURL = baseUrl;\r\n    http.get<Array<string>>(baseUrl + 'city/ListCity').subscribe(result => {\r\n      this.cityNames = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  addCity(city: string)\r\n  {\r\n    this.httpcl?.get(this.apiURL + 'city/AddCity?cityName=' + city).subscribe(result => {\r\n      location.reload();\r\n    }, error => location.reload());\r\n  }\r\n\r\n  removeCity(city: string) {\r\n    this.httpcl?.get(this.apiURL + 'city/RemoveCity?cityName=' + city).subscribe(result => {\r\n      location.reload();\r\n    }, error => location.reload());\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}