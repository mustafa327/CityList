{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CityPageComp_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CityPageComp_table_5_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cityname_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cityname_r3);\n  }\n}\nfunction CityPageComp_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"City Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, CityPageComp_table_5_tr_6_Template, 3, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cityNames);\n  }\n}\nexport class CityPageComp {\n  constructor(http, baseUrl) {\n    this.cityNames = [];\n    http.get(baseUrl + 'city/ListCity').subscribe(result => {\n      this.cityNames = result;\n    }, error => console.error(error));\n  }\n}\nCityPageComp.ɵfac = function CityPageComp_Factory(t) {\n  return new (t || CityPageComp)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCityPageComp.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CityPageComp,\n  selectors: [[\"app-city-page\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CityPageComp_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, CityPageComp_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, CityPageComp_table_5_Template, 7, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.cityNames == null ? null : ctx.cityNames.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cityNames.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAS7CA,0BAAuC;IACjCA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,iCAAc;;;;;IARxBA,gCAAyF;IAG/EA,yBAAS;IAAAA,iBAAK;IAGtBA,6BAAO;IACLA,mEAEK;IACPA,iBAAQ;;;;IAHmBA,eAAY;IAAZA,0CAAY;;;ACNzC,OAAM,MAAOC,YAAY;EAIvBC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAkB,EAAE;IAGlCD,IAAI,CAACE,GAAG,CAAgBD,OAAO,GAAG,eAAe,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACpE,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AARWR,YAAY;mBAAZA,YAAY,4DAIe,UAAU;AAAA;AAJrCA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBf,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,yDAAqD;MAErDA,iEAWQ;;;MAbJA,eAAwB;MAAxBA,6EAAwB;MAEqCA,eAAsB;MAAtBA,2CAAsB","names":["i0","CityPageComp","constructor","http","baseUrl","get","subscribe","result","cityNames","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\musta\\source\\repos\\FreelancerProjectAngular\\ClientApp\\src\\app\\city-page\\city-page.html","C:\\Users\\musta\\source\\repos\\FreelancerProjectAngular\\ClientApp\\src\\app\\city-page\\city-page.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!cityNames?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"cityNames.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>City Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let cityname of cityNames\">\r\n      <td>{{ cityname }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-city-page',\r\n  templateUrl: './city-page.html'\r\n})\r\nexport class CityPageComp {\r\n\r\n  public cityNames: Array<string> = []\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Array<string>>(baseUrl + 'city/ListCity').subscribe(result => {\r\n      this.cityNames = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}